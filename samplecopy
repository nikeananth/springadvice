import org.apache.commons.beanutils.BeanUtils;

import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class EmployeeCopyUtility {

    public static void copyEmployeeData(EmployeeV1 source, EmployeeV2 destination) {
        try {
            // Copy basic employee information
            BeanUtils.copyProperties(destination, source);

            // Copy address information
            if (source.getAddress() != null) {
                AddressV1 sourceAddress = source.getAddress();
                AddressV2 destinationAddress = new AddressV2();
                copyAddressData(sourceAddress, destinationAddress);

                // Copy location information
                if (sourceAddress.getLocation() != null) {
                    LocationV1 sourceLocation = sourceAddress.getLocation();
                    LocationV2 destinationLocation = new LocationV2();
                    copyLocationData(sourceLocation, destinationLocation);
                    destinationAddress.setLocation(destinationLocation);
                }

                destination.setAddress(destinationAddress);
            }

            // Copy employeeData information
            copyEmployeeDataList(source.getEmployeeData(), destination.getEmployeeData());

            // Copy additional data if needed
            destination.setEmployeeDepartment("DefaultDepartment"); // Example

        } catch (Exception e) {
            e.printStackTrace(); // Handle the exception appropriately
        }
    }

    private static void copyAddressData(AddressV1 source, AddressV2 destination) {
        try {
            BeanUtils.copyProperties(destination, source);
        } catch (Exception e) {
            e.printStackTrace(); // Handle the exception appropriately
        }
    }

    private static void copyLocationData(LocationV1 source, LocationV2 destination) {
        try {
            BeanUtils.copyProperties(destination, source);
        } catch (Exception e) {
            e.printStackTrace(); // Handle the exception appropriately
        }
    }

    private static <K, V> void copyEmployeeDataList(List<Map<K, V>> sourceList, List<Map<K, V>> destinationList) {
        if (sourceList != null) {
            destinationList = new ArrayList<>();
            for (Map<K, V> sourceMap : sourceList) {
                Map<K, V> destinationMap = new HashMap<>(sourceMap);
                destinationList.add(destinationMap);
            }
        }
    }

    public static void main(String[] args) {
        // Example usage:
        EmployeeV1 sourceEmployee = new EmployeeV1();
        // Initialize sourceEmployee with data

        EmployeeV2 destinationEmployee = new EmployeeV2();
        copyEmployeeData(sourceEmployee, destinationEmployee);

        // Now destinationEmployee contains a copy of sourceEmployee
        System.out.println(destinationEmployee);
    }

    // Additional utility methods if needed
}
